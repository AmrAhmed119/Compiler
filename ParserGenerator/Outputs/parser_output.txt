Stack: METHOD_BODY $ 
Stack: STATEMENT_LIST $ 
Stack: STATEMENT STATEMENT_LIST' $ 
Stack: DECLARATION STATEMENT_LIST' $ 
Stack: int id ; STATEMENT_LIST' $ 
Matched  String: int
Stack: id ; STATEMENT_LIST' $ 
Matched  String: id
Stack: ; STATEMENT_LIST' $ 
Matched  String: ;
Stack: STATEMENT_LIST' $ 
Stack: STATEMENT STATEMENT_LIST' $ 
Stack: id assign EXPRESSION ; STATEMENT_LIST' $ 
Matched  String: id
Stack: assign EXPRESSION ; STATEMENT_LIST' $ 
Matched  String: assign
Stack: EXPRESSION ; STATEMENT_LIST' $ 
Stack: SIMPLE_EXPRESSION EXPRESSION* ; STATEMENT_LIST' $ 
Stack: TERM SIMPLE_EXPRESSION' EXPRESSION* ; STATEMENT_LIST' $ 
Stack: num TERM' SIMPLE_EXPRESSION' EXPRESSION* ; STATEMENT_LIST' $ 
Matched  String: num
Stack: TERM' SIMPLE_EXPRESSION' EXPRESSION* ; STATEMENT_LIST' $ 
Stack: \L SIMPLE_EXPRESSION' EXPRESSION* ; STATEMENT_LIST' $ 
Stack: SIMPLE_EXPRESSION' EXPRESSION* ; STATEMENT_LIST' $ 
Stack: \L EXPRESSION* ; STATEMENT_LIST' $ 
Stack: EXPRESSION* ; STATEMENT_LIST' $ 
Stack: \L ; STATEMENT_LIST' $ 
Stack: ; STATEMENT_LIST' $ 
Matched  String: ;
Stack: STATEMENT_LIST' $ 
Stack: STATEMENT STATEMENT_LIST' $ 
Stack: if ( EXPRESSION ) { STATEMENT } else { STATEMENT } STATEMENT_LIST' $ 
Matched  String: if
Stack: ( EXPRESSION ) { STATEMENT } else { STATEMENT } STATEMENT_LIST' $ 
Matched  String: (
Stack: EXPRESSION ) { STATEMENT } else { STATEMENT } STATEMENT_LIST' $ 
Stack: SIMPLE_EXPRESSION EXPRESSION* ) { STATEMENT } else { STATEMENT } STATEMENT_LIST' $ 
Stack: TERM SIMPLE_EXPRESSION' EXPRESSION* ) { STATEMENT } else { STATEMENT } STATEMENT_LIST' $ 
Stack: id TERM' SIMPLE_EXPRESSION' EXPRESSION* ) { STATEMENT } else { STATEMENT } STATEMENT_LIST' $ 
Matched  String: id
Stack: TERM' SIMPLE_EXPRESSION' EXPRESSION* ) { STATEMENT } else { STATEMENT } STATEMENT_LIST' $ 
Stack: \L SIMPLE_EXPRESSION' EXPRESSION* ) { STATEMENT } else { STATEMENT } STATEMENT_LIST' $ 
Stack: SIMPLE_EXPRESSION' EXPRESSION* ) { STATEMENT } else { STATEMENT } STATEMENT_LIST' $ 
Stack: \L EXPRESSION* ) { STATEMENT } else { STATEMENT } STATEMENT_LIST' $ 
Stack: EXPRESSION* ) { STATEMENT } else { STATEMENT } STATEMENT_LIST' $ 
Stack: relop SIMPLE_EXPRESSION ) { STATEMENT } else { STATEMENT } STATEMENT_LIST' $ 
Matched  String: relop
Stack: SIMPLE_EXPRESSION ) { STATEMENT } else { STATEMENT } STATEMENT_LIST' $ 
Stack: TERM SIMPLE_EXPRESSION' ) { STATEMENT } else { STATEMENT } STATEMENT_LIST' $ 
Stack: num TERM' SIMPLE_EXPRESSION' ) { STATEMENT } else { STATEMENT } STATEMENT_LIST' $ 
Matched  String: num
Stack: TERM' SIMPLE_EXPRESSION' ) { STATEMENT } else { STATEMENT } STATEMENT_LIST' $ 
Stack: \L SIMPLE_EXPRESSION' ) { STATEMENT } else { STATEMENT } STATEMENT_LIST' $ 
Stack: SIMPLE_EXPRESSION' ) { STATEMENT } else { STATEMENT } STATEMENT_LIST' $ 
Stack: \L ) { STATEMENT } else { STATEMENT } STATEMENT_LIST' $ 
Stack: ) { STATEMENT } else { STATEMENT } STATEMENT_LIST' $ 
Matched  String: )
Stack: { STATEMENT } else { STATEMENT } STATEMENT_LIST' $ 
Matched  String: {
Stack: STATEMENT } else { STATEMENT } STATEMENT_LIST' $ 
Stack: id assign EXPRESSION ; } else { STATEMENT } STATEMENT_LIST' $ 
Matched  String: id
Stack: assign EXPRESSION ; } else { STATEMENT } STATEMENT_LIST' $ 
Matched  String: assign
Stack: EXPRESSION ; } else { STATEMENT } STATEMENT_LIST' $ 
Stack: SIMPLE_EXPRESSION EXPRESSION* ; } else { STATEMENT } STATEMENT_LIST' $ 
Stack: TERM SIMPLE_EXPRESSION' EXPRESSION* ; } else { STATEMENT } STATEMENT_LIST' $ 
Stack: num TERM' SIMPLE_EXPRESSION' EXPRESSION* ; } else { STATEMENT } STATEMENT_LIST' $ 
Matched  String: num
Stack: TERM' SIMPLE_EXPRESSION' EXPRESSION* ; } else { STATEMENT } STATEMENT_LIST' $ 
Stack: \L SIMPLE_EXPRESSION' EXPRESSION* ; } else { STATEMENT } STATEMENT_LIST' $ 
Stack: SIMPLE_EXPRESSION' EXPRESSION* ; } else { STATEMENT } STATEMENT_LIST' $ 
Stack: \L EXPRESSION* ; } else { STATEMENT } STATEMENT_LIST' $ 
Stack: EXPRESSION* ; } else { STATEMENT } STATEMENT_LIST' $ 
Stack: \L ; } else { STATEMENT } STATEMENT_LIST' $ 
Stack: ; } else { STATEMENT } STATEMENT_LIST' $ 
Matched  String: ;
Stack: } else { STATEMENT } STATEMENT_LIST' $ 
Matched  String: }
Stack: else { STATEMENT } STATEMENT_LIST' $ 
Miss Matched  String: else
